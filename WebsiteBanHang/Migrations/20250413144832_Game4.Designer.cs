// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebGame.Models;

#nullable disable

namespace WebGame.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250413144832_Game4")]
    partial class Game4
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("WebGame.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Age")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("WebGame.Models.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Developer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MetaScore")
                        .HasColumnType("int");

                    b.Property<bool>("MustPlay")
                        .HasColumnType("bit");

                    b.Property<string>("Platform")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Publisher")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rating")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ReviewCount")
                        .HasColumnType("int");

                    b.Property<string>("Screenshot")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Screenshots")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TrailerUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("TrendingScore")
                        .HasColumnType("real");

                    b.Property<int>("UserReviewCount")
                        .HasColumnType("int");

                    b.Property<int>("UserScore")
                        .HasColumnType("int");

                    b.Property<string>("VideoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ReleaseDate");

                    b.HasIndex("Title");

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Baldur's Gate 3 is a role-playing game developed and published by Larian Studios. Choose from a wide range of D&D races and classes, or play as an origin character with a hand-crafted background.",
                            Developer = "Larian Studios",
                            Genre = "RPG",
                            ImageUrl = "/images/games/baldurs-gate-3.jpg",
                            MetaScore = 96,
                            MustPlay = false,
                            Platform = "Not specified",
                            Publisher = "Larian Studios",
                            Rating = "M",
                            ReleaseDate = new DateTime(2023, 8, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewCount = 0,
                            Title = "Baldur's Gate 3",
                            TrendingScore = 0f,
                            UserReviewCount = 0,
                            UserScore = 0
                        },
                        new
                        {
                            Id = 2,
                            Description = "Marvel's Spider-Man 2 is an action-adventure game featuring both Peter Parker and Miles Morales.",
                            Developer = "Insomniac Games",
                            Genre = "Action-Adventure",
                            ImageUrl = "/images/games/spiderman2.jpg",
                            MetaScore = 90,
                            MustPlay = false,
                            Platform = "Not specified",
                            Publisher = "Sony Interactive Entertainment",
                            Rating = "T",
                            ReleaseDate = new DateTime(2023, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewCount = 0,
                            Title = "Marvel's Spider-Man 2",
                            TrendingScore = 0f,
                            UserReviewCount = 0,
                            UserScore = 0
                        },
                        new
                        {
                            Id = 3,
                            Description = "Resident Evil 4 is a survival horror game developed and published by Capcom.",
                            Developer = "Capcom",
                            Genre = "Survival Horror",
                            ImageUrl = "/images/games/re4.jpg",
                            MetaScore = 93,
                            MustPlay = false,
                            Platform = "Not specified",
                            Publisher = "Capcom",
                            Rating = "M",
                            ReleaseDate = new DateTime(2023, 3, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewCount = 0,
                            Title = "Resident Evil 4 Remake",
                            TrendingScore = 0f,
                            UserReviewCount = 0,
                            UserScore = 0
                        },
                        new
                        {
                            Id = 4,
                            Description = "The Legend of Zelda: Tears of the Kingdom is an action-adventure game developed and published by Nintendo, the sequel to Breath of the Wild.",
                            Developer = "Nintendo",
                            Genre = "Action-Adventure",
                            ImageUrl = "/images/games/zelda-totk.jpg",
                            MetaScore = 96,
                            MustPlay = false,
                            Platform = "Not specified",
                            Publisher = "Nintendo",
                            Rating = "E10+",
                            ReleaseDate = new DateTime(2023, 5, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewCount = 0,
                            Title = "The Legend of Zelda: Tears of the Kingdom",
                            TrendingScore = 0f,
                            UserReviewCount = 0,
                            UserScore = 0
                        },
                        new
                        {
                            Id = 5,
                            Description = "Final Fantasy XVI is an action role-playing game developed and published by Square Enix.",
                            Developer = "Square Enix",
                            Genre = "Action RPG",
                            ImageUrl = "/images/games/ff16.jpg",
                            MetaScore = 87,
                            MustPlay = false,
                            Platform = "Not specified",
                            Publisher = "Square Enix",
                            Rating = "M",
                            ReleaseDate = new DateTime(2023, 6, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewCount = 0,
                            Title = "Final Fantasy XVI",
                            TrendingScore = 0f,
                            UserReviewCount = 0,
                            UserScore = 0
                        },
                        new
                        {
                            Id = 6,
                            Description = "Star Wars Jedi: Survivor is an action-adventure game developed by Respawn Entertainment.",
                            Developer = "Respawn Entertainment",
                            Genre = "Action-Adventure",
                            ImageUrl = "/images/games/jedi-survivor.jpg",
                            MetaScore = 85,
                            MustPlay = false,
                            Platform = "Not specified",
                            Publisher = "Electronic Arts",
                            Rating = "T",
                            ReleaseDate = new DateTime(2023, 4, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewCount = 0,
                            Title = "Star Wars Jedi: Survivor",
                            TrendingScore = 0f,
                            UserReviewCount = 0,
                            UserScore = 0
                        },
                        new
                        {
                            Id = 7,
                            Description = "Dead Space is a survival horror game developed by Motive Studio and published by Electronic Arts.",
                            Developer = "Motive Studio",
                            Genre = "Survival Horror",
                            ImageUrl = "/images/games/dead-space.jpg",
                            MetaScore = 89,
                            MustPlay = false,
                            Platform = "Not specified",
                            Publisher = "Electronic Arts",
                            Rating = "M",
                            ReleaseDate = new DateTime(2023, 1, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewCount = 0,
                            Title = "Dead Space Remake",
                            TrendingScore = 0f,
                            UserReviewCount = 0,
                            UserScore = 0
                        },
                        new
                        {
                            Id = 8,
                            Description = "Hi-Fi Rush is a rhythm-action game developed by Tango Gameworks and published by Bethesda Softworks.",
                            Developer = "Tango Gameworks",
                            Genre = "Action Rhythm",
                            ImageUrl = "/images/games/hifi-rush.jpg",
                            MetaScore = 88,
                            MustPlay = false,
                            Platform = "Not specified",
                            Publisher = "Bethesda Softworks",
                            Rating = "T",
                            ReleaseDate = new DateTime(2023, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewCount = 0,
                            Title = "Hi-Fi Rush",
                            TrendingScore = 0f,
                            UserReviewCount = 0,
                            UserScore = 0
                        },
                        new
                        {
                            Id = 9,
                            Description = "Street Fighter 6 is a fighting game developed and published by Capcom.",
                            Developer = "Capcom",
                            Genre = "Fighting",
                            ImageUrl = "/images/games/sf6.jpg",
                            MetaScore = 92,
                            MustPlay = false,
                            Platform = "Not specified",
                            Publisher = "Capcom",
                            Rating = "T",
                            ReleaseDate = new DateTime(2023, 6, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewCount = 0,
                            Title = "Street Fighter 6",
                            TrendingScore = 0f,
                            UserReviewCount = 0,
                            UserScore = 0
                        },
                        new
                        {
                            Id = 10,
                            Description = "Diablo IV is an action role-playing game developed and published by Blizzard Entertainment.",
                            Developer = "Blizzard Entertainment",
                            Genre = "Action RPG",
                            ImageUrl = "/images/games/diablo4.jpg",
                            MetaScore = 88,
                            MustPlay = false,
                            Platform = "Not specified",
                            Publisher = "Blizzard Entertainment",
                            Rating = "M",
                            ReleaseDate = new DateTime(2023, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewCount = 0,
                            Title = "Diablo IV",
                            TrendingScore = 0f,
                            UserReviewCount = 0,
                            UserScore = 0
                        },
                        new
                        {
                            Id = 11,
                            Description = "Lies of P is a souls-like action RPG inspired by the story of Pinocchio.",
                            Developer = "Neowiz Games",
                            Genre = "Action RPG",
                            ImageUrl = "/images/games/lies-of-p.jpg",
                            MetaScore = 84,
                            MustPlay = false,
                            Platform = "Not specified",
                            Publisher = "Neowiz Games",
                            Rating = "M",
                            ReleaseDate = new DateTime(2023, 9, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewCount = 0,
                            Title = "Lies of P",
                            TrendingScore = 0f,
                            UserReviewCount = 0,
                            UserScore = 0
                        },
                        new
                        {
                            Id = 12,
                            Description = "Armored Core VI: Fires of Rubicon is an action game developed by FromSoftware.",
                            Developer = "FromSoftware",
                            Genre = "Action",
                            ImageUrl = "/images/games/armored-core-6.jpg",
                            MetaScore = 87,
                            MustPlay = false,
                            Platform = "Not specified",
                            Publisher = "Bandai Namco",
                            Rating = "T",
                            ReleaseDate = new DateTime(2023, 8, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewCount = 0,
                            Title = "Armored Core VI",
                            TrendingScore = 0f,
                            UserReviewCount = 0,
                            UserScore = 0
                        },
                        new
                        {
                            Id = 13,
                            Description = "Sea of Stars is a turn-based RPG inspired by classic 16-bit RPGs.",
                            Developer = "Sabotage Studio",
                            Genre = "RPG",
                            ImageUrl = "/images/games/sea-of-stars.jpg",
                            MetaScore = 89,
                            MustPlay = false,
                            Platform = "Not specified",
                            Publisher = "Sabotage Studio",
                            Rating = "E10+",
                            ReleaseDate = new DateTime(2023, 8, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewCount = 0,
                            Title = "Sea of Stars",
                            TrendingScore = 0f,
                            UserReviewCount = 0,
                            UserScore = 0
                        },
                        new
                        {
                            Id = 14,
                            Description = "Starfield is an action role-playing game developed by Bethesda Game Studios.",
                            Developer = "Bethesda Game Studios",
                            Genre = "Action RPG",
                            ImageUrl = "/images/games/starfield.jpg",
                            MetaScore = 83,
                            MustPlay = false,
                            Platform = "Not specified",
                            Publisher = "Bethesda Softworks",
                            Rating = "M",
                            ReleaseDate = new DateTime(2023, 9, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewCount = 0,
                            Title = "Starfield",
                            TrendingScore = 0f,
                            UserReviewCount = 0,
                            UserScore = 0
                        },
                        new
                        {
                            Id = 15,
                            Description = "Alan Wake 2 is a survival horror game developed by Remedy Entertainment.",
                            Developer = "Remedy Entertainment",
                            Genre = "Survival Horror",
                            ImageUrl = "/images/games/alan-wake-2.jpg",
                            MetaScore = 89,
                            MustPlay = false,
                            Platform = "Not specified",
                            Publisher = "Epic Games",
                            Rating = "M",
                            ReleaseDate = new DateTime(2023, 10, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewCount = 0,
                            Title = "Alan Wake 2",
                            TrendingScore = 0f,
                            UserReviewCount = 0,
                            UserScore = 0
                        },
                        new
                        {
                            Id = 16,
                            Description = "Super Mario Bros. Wonder is a 2D side-scrolling platform game developed by Nintendo.",
                            Developer = "Nintendo",
                            Genre = "Platform",
                            ImageUrl = "/images/games/mario-wonder.jpg",
                            MetaScore = 92,
                            MustPlay = false,
                            Platform = "Not specified",
                            Publisher = "Nintendo",
                            Rating = "E",
                            ReleaseDate = new DateTime(2023, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewCount = 0,
                            Title = "Super Mario Bros. Wonder",
                            TrendingScore = 0f,
                            UserReviewCount = 0,
                            UserScore = 0
                        },
                        new
                        {
                            Id = 17,
                            Description = "Octopath Traveler II is a turn-based RPG featuring eight different characters with unique stories.",
                            Developer = "Square Enix",
                            Genre = "RPG",
                            ImageUrl = "/images/games/octopath2.jpg",
                            MetaScore = 87,
                            MustPlay = false,
                            Platform = "Not specified",
                            Publisher = "Square Enix",
                            Rating = "T",
                            ReleaseDate = new DateTime(2023, 2, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewCount = 0,
                            Title = "Octopath Traveler II",
                            TrendingScore = 0f,
                            UserReviewCount = 0,
                            UserScore = 0
                        },
                        new
                        {
                            Id = 18,
                            Description = "Assassin's Creed Mirage is an action-adventure game set in 9th century Baghdad.",
                            Developer = "Ubisoft Bordeaux",
                            Genre = "Action-Adventure",
                            ImageUrl = "/images/games/ac-mirage.jpg",
                            MetaScore = 77,
                            MustPlay = false,
                            Platform = "Not specified",
                            Publisher = "Ubisoft",
                            Rating = "M",
                            ReleaseDate = new DateTime(2023, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewCount = 0,
                            Title = "Assassin's Creed Mirage",
                            TrendingScore = 0f,
                            UserReviewCount = 0,
                            UserScore = 0
                        },
                        new
                        {
                            Id = 19,
                            Description = "Mortal Kombat 1 is a fighting game developed by NetherRealm Studios.",
                            Developer = "NetherRealm Studios",
                            Genre = "Fighting",
                            ImageUrl = "/images/games/mk1.jpg",
                            MetaScore = 84,
                            MustPlay = false,
                            Platform = "Not specified",
                            Publisher = "Warner Bros. Games",
                            Rating = "M",
                            ReleaseDate = new DateTime(2023, 9, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewCount = 0,
                            Title = "Mortal Kombat 1",
                            TrendingScore = 0f,
                            UserReviewCount = 0,
                            UserScore = 0
                        },
                        new
                        {
                            Id = 20,
                            Description = "Atomic Heart is a first-person shooter set in an alternate reality Soviet Union.",
                            Developer = "Mundfish",
                            Genre = "Action FPS",
                            ImageUrl = "/images/games/atomic-heart.jpg",
                            MetaScore = 75,
                            MustPlay = false,
                            Platform = "Not specified",
                            Publisher = "Focus Entertainment",
                            Rating = "M",
                            ReleaseDate = new DateTime(2023, 2, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewCount = 0,
                            Title = "Atomic Heart",
                            TrendingScore = 0f,
                            UserReviewCount = 0,
                            UserScore = 0
                        },
                        new
                        {
                            Id = 21,
                            Description = "Forza Motorsport is a racing simulation game developed by Turn 10 Studios.",
                            Developer = "Turn 10 Studios",
                            Genre = "Racing",
                            ImageUrl = "/images/games/forza-motorsport.jpg",
                            MetaScore = 86,
                            MustPlay = false,
                            Platform = "Not specified",
                            Publisher = "Xbox Game Studios",
                            Rating = "E",
                            ReleaseDate = new DateTime(2023, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewCount = 0,
                            Title = "Forza Motorsport",
                            TrendingScore = 0f,
                            UserReviewCount = 0,
                            UserScore = 0
                        },
                        new
                        {
                            Id = 22,
                            Description = "Wild Hearts is a hunting action game where you battle giant beasts using ancient technology.",
                            Developer = "Omega Force",
                            Genre = "Action RPG",
                            ImageUrl = "/images/games/wild-hearts.jpg",
                            MetaScore = 76,
                            MustPlay = false,
                            Platform = "Not specified",
                            Publisher = "Electronic Arts",
                            Rating = "T",
                            ReleaseDate = new DateTime(2023, 2, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewCount = 0,
                            Title = "Wild Hearts",
                            TrendingScore = 0f,
                            UserReviewCount = 0,
                            UserScore = 0
                        },
                        new
                        {
                            Id = 23,
                            Description = "Remnant II is an action-shooter survival game set in a post-apocalyptic world.",
                            Developer = "Gunfire Games",
                            Genre = "Action",
                            ImageUrl = "/images/games/remnant2.jpg",
                            MetaScore = 85,
                            MustPlay = false,
                            Platform = "Not specified",
                            Publisher = "Gearbox Publishing",
                            Rating = "M",
                            ReleaseDate = new DateTime(2023, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewCount = 0,
                            Title = "Remnant II",
                            TrendingScore = 0f,
                            UserReviewCount = 0,
                            UserScore = 0
                        },
                        new
                        {
                            Id = 24,
                            Description = "Pikmin 4 is a real-time strategy and puzzle game developed by Nintendo.",
                            Developer = "Nintendo",
                            Genre = "Strategy",
                            ImageUrl = "/images/games/pikmin4.jpg",
                            MetaScore = 87,
                            MustPlay = false,
                            Platform = "Not specified",
                            Publisher = "Nintendo",
                            Rating = "E10+",
                            ReleaseDate = new DateTime(2023, 7, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewCount = 0,
                            Title = "Pikmin 4",
                            TrendingScore = 0f,
                            UserReviewCount = 0,
                            UserScore = 0
                        });
                });

            modelBuilder.Entity("WebGame.Models.GameCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GameCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Action games focus on physical challenges, including hand–eye coordination and reaction-time.",
                            Name = "Action"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Adventure games focus on puzzle solving within a narrative framework.",
                            Name = "Adventure"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Role-playing games where players assume the roles of characters in a fictional setting.",
                            Name = "RPG"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Strategy games focus on skillful thinking and planning to achieve victory.",
                            Name = "Strategy"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Sports games simulate the practice of traditional physical sports.",
                            Name = "Sports"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Racing games involve the player participating in racing competitions.",
                            Name = "Racing"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Simulation games are designed to simulate real world activities.",
                            Name = "Simulation"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Fighting games emphasize one-on-one combat between characters.",
                            Name = "Fighting"
                        });
                });

            modelBuilder.Entity("WebGame.Models.GamePlatform", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<int>("PlatformId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("PlatformId");

                    b.ToTable("GamePlatforms");

                    b.HasData(
                        new
                        {
                            Id = 14,
                            GameId = 9,
                            PlatformId = 2,
                            ReleaseDate = new DateTime(2018, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 15,
                            GameId = 9,
                            PlatformId = 11,
                            ReleaseDate = new DateTime(2022, 1, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 16,
                            GameId = 10,
                            PlatformId = 2,
                            ReleaseDate = new DateTime(2015, 5, 19, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 17,
                            GameId = 10,
                            PlatformId = 5,
                            ReleaseDate = new DateTime(2015, 5, 19, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 18,
                            GameId = 10,
                            PlatformId = 11,
                            ReleaseDate = new DateTime(2015, 5, 19, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 19,
                            GameId = 10,
                            PlatformId = 7,
                            ReleaseDate = new DateTime(2019, 10, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 20,
                            GameId = 11,
                            PlatformId = 2,
                            ReleaseDate = new DateTime(2020, 3, 31, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 21,
                            GameId = 11,
                            PlatformId = 7,
                            ReleaseDate = new DateTime(2022, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 22,
                            GameId = 12,
                            PlatformId = 1,
                            ReleaseDate = new DateTime(2022, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 23,
                            GameId = 12,
                            PlatformId = 2,
                            ReleaseDate = new DateTime(2022, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 24,
                            GameId = 12,
                            PlatformId = 4,
                            ReleaseDate = new DateTime(2022, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 25,
                            GameId = 12,
                            PlatformId = 5,
                            ReleaseDate = new DateTime(2022, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 26,
                            GameId = 12,
                            PlatformId = 11,
                            ReleaseDate = new DateTime(2022, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 27,
                            GameId = 13,
                            PlatformId = 2,
                            ReleaseDate = new DateTime(2020, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 28,
                            GameId = 13,
                            PlatformId = 11,
                            ReleaseDate = new DateTime(2021, 12, 16, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 29,
                            GameId = 14,
                            PlatformId = 1,
                            ReleaseDate = new DateTime(2020, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 30,
                            GameId = 14,
                            PlatformId = 2,
                            ReleaseDate = new DateTime(2020, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 31,
                            GameId = 14,
                            PlatformId = 4,
                            ReleaseDate = new DateTime(2020, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 32,
                            GameId = 14,
                            PlatformId = 5,
                            ReleaseDate = new DateTime(2020, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 33,
                            GameId = 14,
                            PlatformId = 11,
                            ReleaseDate = new DateTime(2020, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 34,
                            GameId = 15,
                            PlatformId = 1,
                            ReleaseDate = new DateTime(2021, 8, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 35,
                            GameId = 15,
                            PlatformId = 2,
                            ReleaseDate = new DateTime(2020, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 36,
                            GameId = 16,
                            PlatformId = 2,
                            ReleaseDate = new DateTime(2017, 2, 28, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 37,
                            GameId = 16,
                            PlatformId = 11,
                            ReleaseDate = new DateTime(2020, 8, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 38,
                            GameId = 17,
                            PlatformId = 2,
                            ReleaseDate = new DateTime(2019, 3, 22, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 39,
                            GameId = 17,
                            PlatformId = 5,
                            ReleaseDate = new DateTime(2019, 3, 22, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 40,
                            GameId = 17,
                            PlatformId = 11,
                            ReleaseDate = new DateTime(2019, 3, 22, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 41,
                            GameId = 18,
                            PlatformId = 2,
                            ReleaseDate = new DateTime(2021, 8, 13, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 42,
                            GameId = 18,
                            PlatformId = 1,
                            ReleaseDate = new DateTime(2021, 8, 13, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 43,
                            GameId = 18,
                            PlatformId = 5,
                            ReleaseDate = new DateTime(2021, 8, 13, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 44,
                            GameId = 18,
                            PlatformId = 4,
                            ReleaseDate = new DateTime(2021, 8, 13, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 45,
                            GameId = 18,
                            PlatformId = 7,
                            ReleaseDate = new DateTime(2020, 9, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 46,
                            GameId = 18,
                            PlatformId = 11,
                            ReleaseDate = new DateTime(2020, 9, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 47,
                            GameId = 19,
                            PlatformId = 2,
                            ReleaseDate = new DateTime(2019, 11, 8, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 48,
                            GameId = 19,
                            PlatformId = 11,
                            ReleaseDate = new DateTime(2020, 7, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 49,
                            GameId = 20,
                            PlatformId = 1,
                            ReleaseDate = new DateTime(2021, 3, 26, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 50,
                            GameId = 20,
                            PlatformId = 2,
                            ReleaseDate = new DateTime(2021, 3, 26, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 51,
                            GameId = 20,
                            PlatformId = 4,
                            ReleaseDate = new DateTime(2021, 3, 26, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 52,
                            GameId = 20,
                            PlatformId = 5,
                            ReleaseDate = new DateTime(2021, 3, 26, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 53,
                            GameId = 20,
                            PlatformId = 11,
                            ReleaseDate = new DateTime(2021, 3, 26, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 54,
                            GameId = 21,
                            PlatformId = 7,
                            ReleaseDate = new DateTime(2021, 3, 26, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 55,
                            GameId = 21,
                            PlatformId = 11,
                            ReleaseDate = new DateTime(2022, 1, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 56,
                            GameId = 21,
                            PlatformId = 1,
                            ReleaseDate = new DateTime(2023, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 57,
                            GameId = 21,
                            PlatformId = 2,
                            ReleaseDate = new DateTime(2023, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 58,
                            GameId = 21,
                            PlatformId = 4,
                            ReleaseDate = new DateTime(2023, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 59,
                            GameId = 21,
                            PlatformId = 5,
                            ReleaseDate = new DateTime(2023, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 60,
                            GameId = 22,
                            PlatformId = 1,
                            ReleaseDate = new DateTime(2021, 9, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 61,
                            GameId = 22,
                            PlatformId = 11,
                            ReleaseDate = new DateTime(2021, 9, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 62,
                            GameId = 22,
                            PlatformId = 4,
                            ReleaseDate = new DateTime(2022, 9, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 63,
                            GameId = 23,
                            PlatformId = 1,
                            ReleaseDate = new DateTime(2021, 6, 11, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 64,
                            GameId = 23,
                            PlatformId = 11,
                            ReleaseDate = new DateTime(2023, 7, 26, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 65,
                            GameId = 24,
                            PlatformId = 1,
                            ReleaseDate = new DateTime(2020, 11, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("WebGame.Models.NewsPost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GameCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("GameCategoryId1")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PublishDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Summary")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt");

                    b.HasIndex("GameCategoryId");

                    b.HasIndex("GameCategoryId1");

                    b.HasIndex("Title");

                    b.ToTable("NewsPosts");
                });

            modelBuilder.Entity("WebGame.Models.Platform", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Platforms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Manufacturer = "Sony",
                            Name = "PlayStation 5",
                            ReleaseDate = new DateTime(2020, 11, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Manufacturer = "Sony",
                            Name = "PlayStation 4",
                            ReleaseDate = new DateTime(2013, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Manufacturer = "Sony",
                            Name = "PlayStation 3",
                            ReleaseDate = new DateTime(2006, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            Manufacturer = "Microsoft",
                            Name = "Xbox Series X|S",
                            ReleaseDate = new DateTime(2020, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            Manufacturer = "Microsoft",
                            Name = "Xbox One",
                            ReleaseDate = new DateTime(2013, 11, 22, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            Manufacturer = "Microsoft",
                            Name = "Xbox 360",
                            ReleaseDate = new DateTime(2005, 11, 22, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            Manufacturer = "Nintendo",
                            Name = "Nintendo Switch",
                            ReleaseDate = new DateTime(2017, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            Manufacturer = "Nintendo",
                            Name = "Nintendo Wii U",
                            ReleaseDate = new DateTime(2012, 11, 18, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            Manufacturer = "Nintendo",
                            Name = "Nintendo Wii",
                            ReleaseDate = new DateTime(2006, 11, 19, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            Manufacturer = "Nintendo",
                            Name = "Nintendo 3DS",
                            ReleaseDate = new DateTime(2011, 2, 26, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11,
                            Manufacturer = "Various",
                            Name = "PC"
                        },
                        new
                        {
                            Id = 12,
                            Manufacturer = "Nintendo",
                            Name = "Nintendo 64",
                            ReleaseDate = new DateTime(1996, 6, 23, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 13,
                            Manufacturer = "Sony",
                            Name = "PlayStation",
                            ReleaseDate = new DateTime(1994, 12, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 14,
                            Manufacturer = "Sony",
                            Name = "PlayStation 2",
                            ReleaseDate = new DateTime(2000, 3, 4, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("WebGame.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<int>("HelpfulCount")
                        .HasColumnType("int");

                    b.Property<bool>("IsCriticReview")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ReviewDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("UnhelpfulCount")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("WebGame.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("WebGame.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebGame.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("WebGame.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebGame.Models.GamePlatform", b =>
                {
                    b.HasOne("WebGame.Models.Game", "Game")
                        .WithMany("GamePlatforms")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebGame.Models.Platform", "Platform")
                        .WithMany("GamePlatforms")
                        .HasForeignKey("PlatformId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Platform");
                });

            modelBuilder.Entity("WebGame.Models.NewsPost", b =>
                {
                    b.HasOne("WebGame.Models.GameCategory", "GameCategory")
                        .WithMany()
                        .HasForeignKey("GameCategoryId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("WebGame.Models.GameCategory", null)
                        .WithMany("NewsPosts")
                        .HasForeignKey("GameCategoryId1");

                    b.Navigation("GameCategory");
                });

            modelBuilder.Entity("WebGame.Models.Review", b =>
                {
                    b.HasOne("WebGame.Models.Game", "Game")
                        .WithMany("Reviews")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebGame.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebGame.Models.Game", b =>
                {
                    b.Navigation("GamePlatforms");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("WebGame.Models.GameCategory", b =>
                {
                    b.Navigation("NewsPosts");
                });

            modelBuilder.Entity("WebGame.Models.Platform", b =>
                {
                    b.Navigation("GamePlatforms");
                });
#pragma warning restore 612, 618
        }
    }
}
